"use strict";(self.webpackChunkKuiClientTemplate=self.webpackChunkKuiClientTemplate||[]).push([[7860],{7860:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var s=t(11227);const r=t.n(s)()("plugins/bash-like/pty/channel");const i=class{constructor(e,n,t){r("WebSocketChannel init",e),this.ws=new WebSocket(e),this.uid=n,this.gid=t}close(){try{r("closing websocket channel"),this.ws.send(JSON.stringify({type:"exit"}))}catch(e){console.error("Error in WebSocketChannel.close",e)}}send(e){const n=Object.assign(JSON.parse(e),{uid:this.uid,gid:this.gid});try{return this.ws.send(JSON.stringify(n))}catch(e){console.error("Error in WebSocketChannel.send",e)}}get readyState(){return this.ws.readyState}removeEventListener(e,n){try{this.ws.removeEventListener(e,n)}catch(e){console.error("Error in WebSocketChannel.removeEventListener",e)}}on(e,n){try{switch(e){case"open":r("WebSocketChannel: installing onopen handler"),this.ws.addEventListener(e,n);break;case"message":r("WebSocketChannel: installing onmessage handler"),this.ws.addEventListener(e,n);break;case"error":r("WebSocketChannel: installing onerror handler"),this.ws.addEventListener(e,n);break;case"close":r("WebSocketChannel: installing onclose handler"),this.ws.addEventListener(e,n)}}catch(e){console.error("Error in WebSocketChannel.on",e)}}}}}]);